{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelectorCard.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","route","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","otherTeamRoute","TeamPage","useState","latestMatches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","getMatches","slice","map","YearSelectorCard","years","i","push","year","MatchPage","matches","setMatches","TeamTile","HomePage","teams","setTeams","getTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3997eb20.chunk.js","sourcesContent":["import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n\r\n    if(!match) {\r\n        return null;\r\n    }\r\n\r\n    const otherTeam = (match.team1 === teamName) ? match.team2 : match.team1;\r\n    const route = `/team/${otherTeam}`;\r\n\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n\r\n  return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n\r\n      <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h2><Link to={route}> {otherTeam} </Link> </h2>\r\n        <h2 className=\"match-date\"> on {match.date} </h2>\r\n        <h3 className=\"match-venue\"> at {match.venue} </h3>\r\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n      </div>\r\n\r\n      <div className=\"additional-detail\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of the mathch</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1}, {match.umpire2} </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport \"./MatchSmallCard.scss\";\r\n\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n\r\n    if(match === null) {\r\n        return null;\r\n    }\r\n\r\n    const otherTeam = (match.team1 === teamName) ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/team/${otherTeam}`;\r\n\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n            <span className=\"vs\">vs</span>\r\n            <h1><Link to={otherTeamRoute}> {otherTeam} </Link></h1>\r\n            <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n        </div>\r\n    );\r\n}","import {React, useEffect, useState} from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport {MatchDetailCard} from '../components/MatchDetailCard';\r\nimport {MatchSmallCard} from '../components/MatchSmallCard';\r\n\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\r\n    const [team , setTeam] = useState({latestMatches : []});\r\n\r\n    const {teamName} = useParams();\r\n\r\n    const END_YEAR = 2020;\r\n\r\n    useEffect(\r\n\r\n        () => {\r\n\r\n            const getMatches = async () => {\r\n\r\n                const response = await fetch(`http://localhost:8080/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n            };\r\n\r\n            getMatches();\r\n\r\n        }, [teamName]\r\n    );\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n\r\n      <div className=\"team-name-section\">\r\n            <h1 className=\"team-name\">{team.teamName}</h1>\r\n        </div>\r\n\r\n\r\n\r\n      <div className=\"match-detail-section\">\r\n      <MatchDetailCard teamName={team.teamName} match={team.latestMatches[0]} />\r\n      </div>\r\n\r\n\r\n\r\n      {team.latestMatches.slice(1).map(match => <MatchSmallCard teamName={team.teamName} match={match} />)}\r\n\r\n        <div className=\"more-link\">\r\n\r\n            <Link to={`/team/${teamName}/match/${END_YEAR}`}> More </Link>\r\n\r\n        </div>\r\n\r\n    </div>\r\n  );\r\n}","import {React} from 'react';\r\nimport { Link} from 'react-router-dom';\r\n\r\nimport './YearSelectorCard.scss';\r\n\r\nexport const YearSelectorCard = ({teamName}) => {\r\n\r\n    var years = [];\r\n\r\n    const START_YEAR = 2008;\r\n    const END_YEAR = 2020;\r\n\r\n    for(var i=START_YEAR;i<=END_YEAR;i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n\r\n        <ol className = \"YearSelectorCard\">\r\n            {years.map( year => (\r\n                <li key={year}>\r\n                    <Link  to={`/team/${teamName}/match/${year}`}>{year}</Link>\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    );\r\n\r\n}","import {React, useEffect, useState} from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport {MatchDetailCard} from '../components/MatchDetailCard';\r\nimport {YearSelectorCard} from '../components/YearSelectorCard';\r\n\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n\r\n    const {teamName, year} = useParams();\r\n\r\n    useEffect(\r\n\r\n            () => {\r\n\r\n                const getMatches = async () => {\r\n\r\n                    const response = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\r\n                    const data = await response.json();\r\n                    setMatches(data);\r\n                };\r\n\r\n                getMatches();\r\n\r\n            }, [teamName, year]\r\n        );\r\n\r\n  return (\r\n    <div className=\"MatchPage\">\r\n\r\n    <div className=\"year-selector-card\">\r\n        <h3> Select Year </h3>\r\n        <YearSelectorCard teamName={teamName}/>\r\n    </div>\r\n\r\n    <div>\r\n      <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n\r\n      <h1 className=\"home-page-link\">\r\n            <Link to={`/`}>Home</Link>\r\n      </h1>\r\n\r\n      {\r\n        matches.map(match => <MatchDetailCard teamName={teamName} match={match}/>)\r\n      }\r\n     </div>\r\n    </div>\r\n  );\r\n}","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport \"./TeamTile.scss\";\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/team/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}","import {React, useEffect, useState} from 'react';\r\n\r\nimport {TeamTile} from '../components/TeamTile';\r\n\r\nimport './HomePage.scss';\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect(\r\n\r\n                () => {\r\n\r\n                    const getTeams = async () => {\r\n\r\n                        const response = await fetch(`http://localhost:8080/team/allTeams`);\r\n                        const data = await response.json();\r\n                        setTeams(data);\r\n                    };\r\n\r\n                    getTeams();\r\n\r\n                }, []\r\n            );\r\n\r\n\r\n  return (\r\n    <div className=\"HomePage\">\r\n\r\n        <div className=\"homepage-header\">\r\n            <h1 className=\"app-name\"> IPL Dashboard Application</h1>\r\n        </div>\r\n\r\n        <div className=\"team-grid\">\r\n            {teams.map(team => <TeamTile teamName={team.teamName} />)}\r\n        </div>\r\n\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport { TeamPage } from \"./pages/TeamPage\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { MatchPage } from \"./pages/MatchPage\";\r\nimport { HomePage } from \"./pages/HomePage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/team/:teamName/match/:year\">\r\n            <MatchPage />\r\n          </Route>\r\n          <Route path=\"/team/:teamName\">\r\n            <TeamPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}